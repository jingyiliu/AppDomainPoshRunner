<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectGuid>{90A26E8F-D808-474A-9570-DDC0145708D7}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>JustAProgrammer.ADPR.Console</RootNamespace>
    <AssemblyName>poshrunner</AssemblyName>
    <ApplicationIcon>..\art\PoshRunner.Logo.ico</ApplicationIcon>
  </PropertyGroup>
  <Import Project="..\ADPR.Properties.msbuild" />
  <ItemGroup>
    <Reference Include="GetOptNet, Version=1.0.1.0, Culture=neutral, PublicKeyToken=c9bf2c3a9070fff0, processorArchitecture=MSIL">
      <HintPath>..\packages\GetOptNet.1.0.1.0\lib\net30\GetOptNet.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\GlobalAssembly.cs">
      <Link>Properties\GlobalAssembly.cs</Link>
    </Compile>
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\JustAProgrammer.ADPR\JustAProgrammer.ADPR.csproj">
      <Project>{A965C47F-672F-42F0-B941-1E22A6C77196}</Project>
      <Name>JustAProgrammer.ADPR</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\JustAProgrammer.ADPR\AppDomainPoshRunner.SecondAppDomain.ps1">
      <Link>AppDomainPoshRunner.SecondAppDomain.ps1</Link>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="..\JustAProgrammer.ADPR\AppDomainPoshRunner.SecondAppDomain.ps1.config">
      <Link>AppDomainPoshRunner.SecondAppDomain.ps1.config</Link>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Include="..\art\PoshRunner.Logo.ico">
      <Link>PoshRunner.Logo.ico</Link>
    </Content>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <IlmergeDir>$(ProjectDir)..\PoshRunner\$(OutDir)</IlmergeDir>
    <PreBuildEvent>powershell -file "$(ProjectDir)..\art\buildArt.ps1"</PreBuildEvent>
    <PostBuildEvent>set ILMERGE_EXE=$(ProjectDir)\..\packages\ILRepack.1.20\tools\ILRepack.exe
set ILMERGE_TARGETDIR=$(IlmergeDir)
set ILMERGE_TARGETPATH=%25ILMERGE_TARGETDIR%25poshrunner.exe
set ILMERGE_
echo Creating %25ILMERGE_TARGETPATH%25" 
mkdir "%25ILMERGE_TARGETDIR%25" 2&gt; NUL
"%25ILMERGE_EXE%25" /verbose /attr:"$(TargetPath)" "/out:%25ILMERGE_TARGETPATH%25" "$(TargetPath)" "$(TargetDir)JustAProgrammer.ADPR.dll" "$(TargetDir)log4net.dll" "$(TargetDir)GetOptNet.dll"
copy "$(TargetDir)\AppDomainPoshRunner.SecondAppDomain.ps1" "%25ILMERGE_TARGETDIR%25"
copy "$(TargetDir)\AppDomainPoshRunner.SecondAppDomain.ps1.config" "%25ILMERGE_TARGETDIR%25"
REM copy "$(TargetDir)\ADPR.log4net.config" "%25ILMERGE_TARGETDIR%25"</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <ArchiveDir>$(ProjectDir)..\PoshRunner\</ArchiveDir>
    <TargetSevenZip>$(ArchiveDir)$(TargetName)-$(Configuration).7z</TargetSevenZip>
    <TargetZip>$(ArchiveDir)$(TargetName)-$(Configuration).zip</TargetZip>
    <SourceSevenZip>$(IlmergeDir)*</SourceSevenZip>
    <SourceZip>$(IlmergeDir)*</SourceZip>
    <!-- See http://msdn.microsoft.com/en-us/magazine/dd419659.aspx#id0090093 -->
    <CleanDependsOn>CleanArt;$(CleanDependsOn);</CleanDependsOn>
  </PropertyGroup>
  <Target Name="CleanArt">
    <Message Importance="Normal" Text="Cleaning the art"/>
    <Exec Command="powershell -file &quot;$(ProjectDir)..\art\cleanArt.ps1&quot;"/>
  </Target>
  <Import Project="..\SevenZip.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>